{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, unref as _unref, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"basicinfo\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"businfo\"\n};\nconst _hoisted_4 = {\n  class: \"oneinfo bus\"\n};\nconst _hoisted_5 = {\n  class: \"oneinfo time\"\n};\nconst _hoisted_6 = {\n  class: \"twoinfo\"\n};\nconst _hoisted_7 = {\n  class: \"twoinfo\"\n};\nconst _hoisted_8 = {\n  class: \"codebus\"\n};\nconst _hoisted_9 = {\n  class: \"twoinfo\"\n};\nconst _hoisted_10 = {\n  class: \"routebus\"\n};\nconst _hoisted_11 = {\n  class: \"twoinfo\"\n};\nconst _hoisted_12 = {\n  class: \"threeinfo\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"activetime\"\n};\nconst _hoisted_14 = {\n  key: 1,\n  class: \"overdue\"\n};\nconst _hoisted_15 = {\n  key: 1\n};\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nexport default {\n  __name: 'TheTicket',\n  setup(__props) {\n    const router = useRouter();\n    const route = useRoute();\n    const ticketId = parseInt(route.params.ticketId, 10);\n    const bus = ref(null);\n    let timer = null;\n    const formatTime = seconds => {\n      const minutes = Math.floor(seconds / 60);\n      const remainingSeconds = seconds % 60;\n      return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;\n    };\n    const loadBusInfo = () => {\n      const busData = JSON.parse(localStorage.getItem('busInformation')) || [];\n      return busData.find(bus => bus.id === ticketId);\n    };\n    const startTimer = () => {\n      timer = setInterval(() => {\n        if (bus.value && !bus.value.overdue) {\n          bus.value.remainingTime -= 1;\n          if (bus.value.remainingTime <= 0) {\n            bus.value.overdue = true;\n            bus.value.remainingTime = 0;\n          }\n          bus.value.remainingTimeFormatted = formatTime(bus.value.remainingTime);\n          const busData = JSON.parse(localStorage.getItem('busInformation')) || [];\n          const index = busData.findIndex(b => b.id === ticketId);\n          if (index !== -1) {\n            busData[index] = bus.value;\n            localStorage.setItem('busInformation', JSON.stringify(busData));\n          }\n        }\n      }, 1000);\n    };\n    onMounted(() => {\n      const busData = loadBusInfo();\n      if (busData) {\n        const currentTime = new Date().getTime();\n        const elapsedTime = Math.floor((currentTime - busData.startTime) / 1000);\n        busData.remainingTime -= elapsedTime;\n        if (busData.remainingTime <= 0) {\n          busData.overdue = true;\n          busData.remainingTime = 0;\n        }\n        busData.remainingTimeFormatted = formatTime(busData.remainingTime);\n        bus.value = busData;\n        startTimer();\n      }\n    });\n    onUnmounted(() => {\n      if (timer) {\n        clearInterval(timer);\n      }\n    });\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"body\", null, [_createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"header\", null, [_createElementVNode(\"button\", {\n        class: \"back\",\n        onClick: _cache[0] || (_cache[0] = $event => _unref(router).push('/tickets'))\n      }, _cache[1] || (_cache[1] = [_createElementVNode(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        class: \"arrowleft\",\n        viewBox: \"0 0 448 512\"\n      }, [_createElementVNode(\"path\", {\n        fill: \"#ffffff\",\n        d: \"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\"\n      })], -1)])), _cache[2] || (_cache[2] = _createElementVNode(\"span\", {\n        class: \"headertitle\"\n      }, \"Мой билет\", -1))]), _createElementVNode(\"section\", _hoisted_2, [bus.value ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createTextVNode(\" ПЕРЕВОЗЧИК \")), _cache[8] || (_cache[8] = _createElementVNode(\"span\", {\n        class: \"titlecarrier\"\n      }, \"ТОО \\\"СапарТранс2012\\\"\", -1)), _cache[9] || (_cache[9] = _createElementVNode(\"div\", {\n        class: \"line\"\n      }, null, -1)), _cache[10] || (_cache[10] = _createElementVNode(\"p\", {\n        class: \"infop\"\n      }, \"Номер автобуса\", -1)), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(bus.value.number), 1), _cache[11] || (_cache[11] = _createElementVNode(\"div\", {\n        class: \"line\"\n      }, null, -1)), _cache[12] || (_cache[12] = _createElementVNode(\"p\", {\n        class: \"infop time\"\n      }, \"Время\", -1)), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(bus.value.createdAt), 1), _cache[13] || (_cache[13] = _createElementVNode(\"div\", {\n        class: \"line\"\n      }, null, -1)), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"p\", {\n        class: \"infopt\"\n      }, \"Дата оплаты\", -1)), _createElementVNode(\"span\", _hoisted_6, _toDisplayString(bus.value.date), 1)]), _createElementVNode(\"li\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"p\", {\n        class: \"infopt\"\n      }, \"Стоимость\", -1)), _createElementVNode(\"span\", _hoisted_7, _toDisplayString(bus.value.cost) + \" ₸ \", 1)]), _createElementVNode(\"li\", _hoisted_8, [_cache[5] || (_cache[5] = _createElementVNode(\"p\", {\n        class: \"infopt busss\"\n      }, \"Код автобуса\", -1)), _createElementVNode(\"span\", _hoisted_9, _toDisplayString(bus.value.code), 1)]), _createElementVNode(\"li\", _hoisted_10, [_cache[6] || (_cache[6] = _createElementVNode(\"p\", {\n        class: \"infopt\"\n      }, \"Маршрут\", -1)), _createElementVNode(\"span\", _hoisted_11, _toDisplayString(bus.value.route), 1)])]), _createElementVNode(\"span\", _hoisted_12, _toDisplayString(bus.value.randomCode), 1), _createElementVNode(\"div\", {\n        class: _normalizeClass(['bottom', bus.value.overdue ? 'overdue' : 'active'])\n      }, [!bus.value.overdue ? (_openBlock(), _createElementBlock(\"p\", _hoisted_13, \"00:\" + _toDisplayString(bus.value.remainingTimeFormatted), 1)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_14, \"ПРОСРОЧЕН\"))], 2)])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_15, \"Билет не найден.\"))]), _cache[14] || (_cache[14] = _createElementVNode(\"div\", {\n        class: \"sizedbox\"\n      }, null, -1))])]);\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","onUnmounted","useRouter","useRoute","router","route","ticketId","parseInt","params","bus","timer","formatTime","seconds","minutes","Math","floor","remainingSeconds","String","padStart","loadBusInfo","busData","JSON","parse","localStorage","getItem","find","id","startTimer","setInterval","value","overdue","remainingTime","remainingTimeFormatted","index","findIndex","b","setItem","stringify","currentTime","Date","getTime","elapsedTime","startTime","clearInterval"],"sources":["c:/TulparCardClone/src/components/TheTicket.vue"],"sourcesContent":["<template>\r\n\r\n    <body>\r\n        <div class=\"container\">\r\n            <header>\r\n                <button class=\"back\" @click=\"router.push('/tickets')\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"arrowleft\" viewBox=\"0 0 448 512\">\r\n                        <path fill=\"#ffffff\"\r\n                            d=\"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\" />\r\n                    </svg>\r\n                </button>\r\n                <span class=\"headertitle\">Мой билет</span>\r\n            </header>\r\n            <section class=\"basicinfo\">\r\n                <div v-if=\"bus\" class=\"businfo\">\r\n                    ПЕРЕВОЗЧИК\r\n                    <span class=\"titlecarrier\">ТОО \"СапарТранс2012\"</span>\r\n                    <div class=\"line\"></div>\r\n                    <p class=\"infop\">Номер автобуса</p>\r\n                    <span class=\"oneinfo bus\">{{ bus.number }}</span>\r\n                    <div class=\"line\"></div>\r\n                    <p class=\"infop time\">Время</p>\r\n                    <span class=\"oneinfo time\">{{ bus.createdAt }}</span>\r\n                    <div class=\"line\"></div>\r\n                    <ul>\r\n                        <li>\r\n                            <p class=\"infopt\">Дата оплаты</p>\r\n                            <span class=\"twoinfo\">{{ bus.date }}</span>\r\n                        </li>\r\n                        <li>\r\n                            <p class=\"infopt\">Стоимость</p>\r\n                            <span class=\"twoinfo\">\r\n                                {{ bus.cost }} ₸\r\n                            </span>\r\n                        </li>\r\n                        <li class=\"codebus\">\r\n                            <p class=\"infopt busss\">Код автобуса</p>\r\n                            <span class=\"twoinfo\">{{ bus.code }}</span>\r\n                        </li>\r\n                        <li class=\"routebus\">\r\n                            <p class=\"infopt\">Маршрут</p>\r\n                            <span class=\"twoinfo\">{{ bus.route }}</span>\r\n                        </li>\r\n                    </ul>\r\n                    <span class=\"threeinfo\">{{ bus.randomCode }}</span>\r\n                    <div :class=\"['bottom', bus.overdue ? 'overdue' : 'active']\">\r\n                        <p v-if=\"!bus.overdue\" class=\"activetime\">00:{{ bus.remainingTimeFormatted }}</p>\r\n                        <p v-else class=\"overdue\">ПРОСРОЧЕН</p>\r\n                    </div>\r\n                </div>\r\n                <p v-else>Билет не найден.</p>\r\n            </section>\r\n            <div class=\"sizedbox\"></div>\r\n        </div>\r\n    </body>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\nimport { useRouter, useRoute } from 'vue-router';\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\n\r\nconst ticketId = parseInt(route.params.ticketId, 10);\r\nconst bus = ref(null);\r\nlet timer = null;\r\n\r\nconst formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${String(minutes).padStart(2, '0')}:${String(remainingSeconds).padStart(2, '0')}`;\r\n};\r\n\r\nconst loadBusInfo = () => {\r\n    const busData = JSON.parse(localStorage.getItem('busInformation')) || [];\r\n    return busData.find(bus => bus.id === ticketId);\r\n};\r\n\r\nconst startTimer = () => {\r\n    timer = setInterval(() => {\r\n        if (bus.value && !bus.value.overdue) {\r\n            bus.value.remainingTime -= 1;\r\n            if (bus.value.remainingTime <= 0) {\r\n                bus.value.overdue = true;\r\n                bus.value.remainingTime = 0;\r\n            }\r\n            bus.value.remainingTimeFormatted = formatTime(bus.value.remainingTime);\r\n\r\n            const busData = JSON.parse(localStorage.getItem('busInformation')) || [];\r\n            const index = busData.findIndex(b => b.id === ticketId);\r\n            if (index !== -1) {\r\n                busData[index] = bus.value;\r\n                localStorage.setItem('busInformation', JSON.stringify(busData));\r\n            }\r\n        }\r\n    }, 1000);\r\n};\r\n\r\nonMounted(() => {\r\n    const busData = loadBusInfo();\r\n    if (busData) {\r\n        const currentTime = new Date().getTime();\r\n        const elapsedTime = Math.floor((currentTime - busData.startTime) / 1000);\r\n        busData.remainingTime -= elapsedTime;\r\n\r\n        if (busData.remainingTime <= 0) {\r\n            busData.overdue = true;\r\n            busData.remainingTime = 0;\r\n        }\r\n\r\n        busData.remainingTimeFormatted = formatTime(busData.remainingTime);\r\n        bus.value = busData;\r\n        startTimer();\r\n    }\r\n});\r\n\r\nonUnmounted(() => {\r\n    if (timer) {\r\n        clearInterval(timer);\r\n    }\r\n});\r\n</script>\r\n\r\n\r\n\r\n\r\n<style scoped>\r\n.container {\r\n    width: 100%;\r\n    height: 100dvh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.bus-info {\r\n    margin-bottom: 20px;\r\n}\r\n\r\nheader {\r\n    background-color: #c83a29;\r\n    width: 100%;\r\n    min-height: 51px;\r\n    display: flex;\r\n    gap: 15px;\r\n    font-family: 'Inter';\r\n    color: white;\r\n    font-size: 20px;\r\n    font-weight: 500;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 2;\r\n}\r\n\r\n.arrowleft {\r\n    width: 16px;\r\n    margin-left: 18px;\r\n    margin-top: 3px;\r\n}\r\n\r\n.headertitle {\r\n    translate: 16px 14.1px;\r\n}\r\n\r\n.back {\r\n    border: 0;\r\n    background-color: transparent;\r\n}\r\n\r\n.basicinfo {\r\n    max-width: 367px;\r\n    width: 92%;\r\n    min-height: 658px;\r\n    border-radius: 15px;\r\n    background-color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n    margin-top: 15px;\r\n    display: flex;\r\n    position: relative;\r\n    overflow: hidden;\r\n    justify-content: center;\r\n    translate: -1px 0px;\r\n}\r\n\r\n.businfo {\r\n    width: 90%;\r\n    font-family: 'Arab';\r\n    font-weight: 400;\r\n    translate: 4px 19px;\r\n    font-size: 20px;\r\n    display: flex;\r\n    flex-direction: column;\r\n}\r\n\r\n.titlecarrier {\r\n    font-size: 15px;\r\n    color: black;\r\n    font-weight: 400;\r\n    font-family: 'Inter';\r\n    margin-top: 9px;\r\n    margin-bottom: 16px;\r\n}\r\n\r\n.line {\r\n    width: 102%;\r\n    height: 1px;\r\n    background-color: #efefef;\r\n    translate: -7px;\r\n}\r\n\r\np {\r\n    font-size: 14.2px;\r\n    font-family: 'Inter';\r\n    color: #848484;\r\n}\r\n\r\n.infop {\r\n    translate: -3.5px;\r\n    margin-top: 16px;\r\n}\r\n\r\n.oneinfo {\r\n    font-size: 50px;\r\n    font-family: 'Arab';\r\n}\r\n\r\n.oneinfo.bus {\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n}\r\n\r\n.infop.time {\r\n    display: flex;\r\n    margin-top: 17px;\r\n}\r\n\r\n.oneinfo.time {\r\n    display: flex;\r\n    margin-bottom: 15px;\r\n}\r\n\r\nul {\r\n    display: flex;\r\n    translate: -3.5px;\r\n    margin-top: 17px;\r\n    gap: 12px;\r\n    flex-wrap: wrap;\r\n}\r\n\r\n.infopt {\r\n    translate: 0px 1px;\r\n}\r\n\r\n.twoinfo {\r\n    font-weight: 300;\r\n}\r\n\r\n.codebus {\r\n    text-align: center;\r\n    translate: 18px;\r\n\r\n}\r\n\r\n.routebus {\r\n    width: 60px;\r\n    word-wrap: break-word;\r\n    translate: 0px 3px;\r\n}\r\n\r\n.threeinfo {\r\n    font-size: 15px;\r\n    font-family: 'ArabN';\r\n    width: 98%;\r\n    display: flex;\r\n    min-height: 22px;\r\n    font-weight: 600;\r\n    justify-content: center;\r\n    margin-top: 19px;\r\n    position: fixed;\r\n    bottom: 120px;\r\n}\r\n\r\n.bottom {\r\n    width: 112%;\r\n    display: flex;\r\n    height: 87px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: fixed;\r\n    translate: 0px 20px;\r\n    left: -22px;\r\n    bottom: 38px;\r\n}\r\n\r\n.overdue {\r\n    font-size: 30px;\r\n    color: white;\r\n}\r\n\r\n.bottom.active {\r\n    background-color: #43c435;\r\n}\r\n\r\n.bottom.overdue {\r\n    background-color: #ccc;\r\n}\r\n\r\n.sizedbox {\r\n    display: flex;\r\n    width: 100%;\r\n    min-height: 25px;\r\n}\r\n\r\n.activetime {\r\n    font-size: 30px;\r\n    color: white;\r\n    font-weight: 600;\r\n    translate: -3px;\r\n}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA,SAASA,GAAG,EAAEC,SAAS,EAAEC,WAAW,QAAQ,KAAK;AACjD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,YAAY;;;;IAEhD,MAAMC,MAAM,GAAGF,SAAS,CAAC,CAAC;IAC1B,MAAMG,KAAK,GAAGF,QAAQ,CAAC,CAAC;IAExB,MAAMG,QAAQ,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAACF,QAAQ,EAAE,EAAE,CAAC;IACpD,MAAMG,GAAG,GAAGV,GAAG,CAAC,IAAI,CAAC;IACrB,IAAIW,KAAK,GAAG,IAAI;IAEhB,MAAMC,UAAU,GAAIC,OAAO,IAAK;MAC5B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,GAAG,EAAE,CAAC;MACxC,MAAMI,gBAAgB,GAAGJ,OAAO,GAAG,EAAE;MACrC,OAAO,GAAGK,MAAM,CAACJ,OAAO,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAID,MAAM,CAACD,gBAAgB,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;IAC7F,CAAC;IAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACtB,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE;MACxE,OAAOJ,OAAO,CAACK,IAAI,CAAChB,GAAG,IAAIA,GAAG,CAACiB,EAAE,KAAKpB,QAAQ,CAAC;IACnD,CAAC;IAED,MAAMqB,UAAU,GAAGA,CAAA,KAAM;MACrBjB,KAAK,GAAGkB,WAAW,CAAC,MAAM;QACtB,IAAInB,GAAG,CAACoB,KAAK,IAAI,CAACpB,GAAG,CAACoB,KAAK,CAACC,OAAO,EAAE;UACjCrB,GAAG,CAACoB,KAAK,CAACE,aAAa,IAAI,CAAC;UAC5B,IAAItB,GAAG,CAACoB,KAAK,CAACE,aAAa,IAAI,CAAC,EAAE;YAC9BtB,GAAG,CAACoB,KAAK,CAACC,OAAO,GAAG,IAAI;YACxBrB,GAAG,CAACoB,KAAK,CAACE,aAAa,GAAG,CAAC;UAC/B;UACAtB,GAAG,CAACoB,KAAK,CAACG,sBAAsB,GAAGrB,UAAU,CAACF,GAAG,CAACoB,KAAK,CAACE,aAAa,CAAC;UAEtE,MAAMX,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAAC,IAAI,EAAE;UACxE,MAAMS,KAAK,GAAGb,OAAO,CAACc,SAAS,CAACC,CAAC,IAAIA,CAAC,CAACT,EAAE,KAAKpB,QAAQ,CAAC;UACvD,IAAI2B,KAAK,KAAK,CAAC,CAAC,EAAE;YACdb,OAAO,CAACa,KAAK,CAAC,GAAGxB,GAAG,CAACoB,KAAK;YAC1BN,YAAY,CAACa,OAAO,CAAC,gBAAgB,EAAEf,IAAI,CAACgB,SAAS,CAACjB,OAAO,CAAC,CAAC;UACnE;QACJ;MACJ,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC;IAEDpB,SAAS,CAAC,MAAM;MACZ,MAAMoB,OAAO,GAAGD,WAAW,CAAC,CAAC;MAC7B,IAAIC,OAAO,EAAE;QACT,MAAMkB,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;QACxC,MAAMC,WAAW,GAAG3B,IAAI,CAACC,KAAK,CAAC,CAACuB,WAAW,GAAGlB,OAAO,CAACsB,SAAS,IAAI,IAAI,CAAC;QACxEtB,OAAO,CAACW,aAAa,IAAIU,WAAW;QAEpC,IAAIrB,OAAO,CAACW,aAAa,IAAI,CAAC,EAAE;UAC5BX,OAAO,CAACU,OAAO,GAAG,IAAI;UACtBV,OAAO,CAACW,aAAa,GAAG,CAAC;QAC7B;QAEAX,OAAO,CAACY,sBAAsB,GAAGrB,UAAU,CAACS,OAAO,CAACW,aAAa,CAAC;QAClEtB,GAAG,CAACoB,KAAK,GAAGT,OAAO;QACnBO,UAAU,CAAC,CAAC;MAChB;IACJ,CAAC,CAAC;IAEF1B,WAAW,CAAC,MAAM;MACd,IAAIS,KAAK,EAAE;QACPiC,aAAa,CAACjC,KAAK,CAAC;MACxB;IACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}